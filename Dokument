Mengenal MySQLi

https://www.w3schools.com/php/php_ref_mysqli.asp

MySQLi adalah ekstensi PHP yang digunakan untuk berinteraksi dengan database MySQL.

1. Dukungan Prepared Statements: MySQLi menyediakan dukungan untuk prepared statements, yang dapat membantu mencegah serangan SQL Injection.
2. Dukungan Transact-SQL: MySQLi menyediakan dukungan untuk sintaks Transact-SQL, yang memungkinkan Anda menggunakan fitur-fitur lanjutan dari MySQL.
3. Dukungan Multi-threading: MySQLi dapat bekerja dengan aplikasi multi-threading, yang membuatnya lebih scalable dan efisien.
4. Dukungan untuk Fungsi-fungsi Lanjutan: MySQLi menyediakan dukungan untuk berbagai fungsi lanjutan, seperti pengambilan metadata, pemantauan koneksi, dan penanganan error yang lebih baik.


===================

contoh nya cara koneksi ke database :

<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_database";

$conn = new mysqli($servername, $username, $password, $dbname);

// Memeriksa koneksi
if ($conn->connect_error) {
    echo "Gagal terhubung ke database!";
    die("Connection failed: " . $conn->connect_error);
} else {
    echo "Berhasil terhubung ke database!";
}

?>

=================================================================

Code lengkapnya dengan penambahan query SELECT:

<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_database";

$conn = new mysqli($servername, $username, $password, $dbname);

// Memeriksa koneksi
if ($conn->connect_error) {
    echo "Gagal terhubung ke database!";
    die("Connection failed: " . $conn->connect_error);
} else {
    echo "Berhasil terhubung ke database!<br>";

    // Menjalankan query
    $sql = "SELECT * FROM users";
    $result = $conn->query($sql);

    // Menampilkan hasil query
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "ID: " . $row["id"] . "<br>";
            echo "Name: " . $row["name"] . "<br><br>";
        }
    } else {
        echo "Tidak ada data.";
    }
}

$conn->close();
?>

=================================================


4. Menggunakan Prepared Statements
Untuk mencegah serangan SQL Injection, disarankan untuk menggunakan Prepared Statements. Contohnya:

5. Menangani Kesalahan
Anda dapat menggunakan $conn->error untuk mendapatkan pesan error jika terjadi kesalahan saat menjalankan query.

6. Menutup Koneksi
Setelah selesai, tutup koneksi database dengan $conn->close().

=========================================

