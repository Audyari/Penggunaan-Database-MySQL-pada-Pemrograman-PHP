Membuat Form Insert

https://www.w3schools.com/php/php_ref_mysqli.asp

MySQLi adalah ekstensi PHP yang digunakan untuk berinteraksi dengan database MySQL.




=================================================

  **** code codepolitan Membuat Form Insert :

buat 2 file : connection.php dan index.php

connection.php : 

<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_database";

$conn = new mysqli($servername, $username, $password, $dbname);

// Memeriksa koneksi
if ($conn->connect_error) {
    echo "Gagal terhubung ke database!";
    die("Connection failed: " . $conn->connect_error);
} else {
    echo "Berhasil terhubung ke database!";
}

?>

================index.php punya code politan :

<?php

include ('connection.php');

$query = mysqli_query($conn, "SELECT * FROM users");
$results = mysqli_fetch_all($query, MYSQLI_ASSOC);
?>

<html>

<body>
    <table border="1">
        <tr>
            <th>Nama</th>
            <th>Alama</th>
            <th>Umur</th>
            <th>created_at</th>
        </tr>
        <?php foreach ($results as $result): ?>
            <tr>
                <td><?php echo $result['id'] ?></td>
                <td><?php echo $result['name'] ?></td>
                <td><?php echo $result['email'] ?></td>
                <td><?php echo $result['created_at'] ?></td>
            </tr>
        <?php endforeach ?>
    </table>
</body>

</html>


================================================

Code Modifikasi : buat 2 file index.php dan insert.php

index.php : 

<!DOCTYPE html>
<html>

<head>
    <title>Tampilkan dan Tambah Data Users</title>
    <style>
        /* CSS Styles */
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 50px auto;
            background-color: white;
            padding: 30px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 30px;
        }

        th,
        td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #4CAF50;
            color: white;
        }

        tr:hover {
            background-color: #f5f5f5;
        }

        .form-container {
            margin-top: 50px;
        }

        input[type=text] {
            width: 100%;
            padding: 12px 20px;
            margin: 8px 0;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Data Users</h1>
        <table>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Created At</th>
            </tr>
            <?php
            $servername = "localhost";
            $username = "root";
            $password = "";
            $dbname = "my_database";

            $conn = new mysqli($servername, $username, $password, $dbname);

            // Check connection
            if ($conn->connect_error) {
                echo "Gagal terhubung ke database!";
                die("Connection failed: " . $conn->connect_error);
            } else {
                // Execute the query
                $sql = "SELECT * FROM users";
                $result = $conn->query($sql);

                // Display the query results
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        echo "<tr>";
                        echo "<td>" . $row["id"] . "</td>";
                        echo "<td>" . $row["name"] . "</td>";
                        echo "<td>" . $row["email"] . "</td>";
                        echo "<td>" . $row["created_at"] . "</td>";
                        echo "</tr>";
                    }
                } else {
                    echo "<tr><td colspan='4'>Tidak ada data.</td></tr>";
                }
            }

            $conn->close();
            ?>
        </table>

        <div class="form-container">
            <h1>Tambah Data User</h1>
            <form action="insert.php" method="post">
                <label for="name">Nama:</label>
                <input type="text" id="name" name="name" required>
                <label for="email">Email:</label>
                <input type="text" id="email" name="email" required>
                <button type="submit">Simpan</button>
            </form>
        </div>
    </div>
</body>

</html>

=========================insert.php

<?php
// Database connection details
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "my_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    echo "Gagal terhubung ke database!";
    die("Connection failed: " . $conn->connect_error);
}

// Retrieve data from the form
$name = $_POST['name'];
$email = $_POST['email'];

// Prepare and execute the INSERT query
$sql = "INSERT INTO users (name, email) VALUES ('$name', '$email')";

if ($conn->query($sql) === TRUE) {
    echo "Data berhasil disimpan!";
    header("Location: index.php"); // Redirect to the index.php page
} else {
    echo "Error: " . $sql . "<br>" . $conn->error;
}

// Close the database connection
$conn->close();
?>


======================================


4. Menggunakan Prepared Statements
Untuk mencegah serangan SQL Injection, disarankan untuk menggunakan Prepared Statements. Contohnya:

5. Menangani Kesalahan
Anda dapat menggunakan $conn->error untuk mendapatkan pesan error jika terjadi kesalahan saat menjalankan query.

6. Menutup Koneksi
Setelah selesai, tutup koneksi database dengan $conn->close().

=========================================

